// <auto-generated />
using System;
using BTCPayServer.Plugins.Cashu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BTCPayServer.Plugins.Cashu.Data.Migrations
{
    [DbContext(typeof(CashuDbContext))]
    partial class CashuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("BTCPayServer.Plugins.Cashu")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.ExportedToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("Mint")
                        .HasColumnType("text");

                    b.Property<string>("SerializedToken")
                        .HasColumnType("text");

                    b.Property<string>("StoreId")
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExportedTokens", "BTCPayServer.Plugins.Cashu");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.FailedTransaction", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasColumnType("text");

                    b.Property<string>("MintUrl")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastRetried")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<bool>("Resolved")
                        .HasColumnType("boolean");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<string>("StoreId")
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("InvoiceId", "MintUrl");

                    b.HasIndex("InvoiceId");

                    b.ToTable("FailedTransactions", "BTCPayServer.Plugins.Cashu");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.Mint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mints", "BTCPayServer.Plugins.Cashu");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.MintKeys", b =>
                {
                    b.Property<int>("MintId")
                        .HasColumnType("integer");

                    b.Property<string>("KeysetId")
                        .HasColumnType("text");

                    b.Property<string>("Keyset")
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("MintId", "KeysetId");

                    b.HasIndex("MintId");

                    b.ToTable("MintKeys", "BTCPayServer.Plugins.Cashu");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.StoredProof", b =>
                {
                    b.Property<Guid>("ProofId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(20,0)")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.Property<string>("C")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "C");

                    b.Property<string>("DLEQ")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "dleq");

                    b.Property<string>("FailedTransactionInvoiceId")
                        .HasColumnType("text");

                    b.Property<string>("FailedTransactionMintUrl")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "secret");

                    b.Property<string>("StoreId")
                        .HasColumnType("text");

                    b.Property<string>("Witness")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "witness");

                    b.HasKey("ProofId");

                    b.HasIndex("Amount");

                    b.HasIndex("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("FailedTransactionInvoiceId", "FailedTransactionMintUrl");

                    b.ToTable("Proofs", "BTCPayServer.Plugins.Cashu");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.FailedTransaction", b =>
                {
                    b.OwnsOne("BTCPayServer.Plugins.Cashu.CashuAbstractions.CashuUtils+OutputData", "OutputData", b1 =>
                        {
                            b1.Property<string>("FailedTransactionInvoiceId")
                                .HasColumnType("text");

                            b1.Property<string>("FailedTransactionMintUrl")
                                .HasColumnType("text");

                            b1.Property<string>("BlindedMessages")
                                .HasColumnType("text");

                            b1.Property<string>("BlindingFactors")
                                .HasColumnType("text");

                            b1.Property<string>("Secrets")
                                .HasColumnType("text");

                            b1.HasKey("FailedTransactionInvoiceId", "FailedTransactionMintUrl");

                            b1.ToTable("FailedTransactions", "BTCPayServer.Plugins.Cashu");

                            b1.WithOwner()
                                .HasForeignKey("FailedTransactionInvoiceId", "FailedTransactionMintUrl");
                        });

                    b.OwnsOne("BTCPayServer.Plugins.Cashu.Data.Models.MeltDetails", "MeltDetails", b1 =>
                        {
                            b1.Property<string>("FailedTransactionInvoiceId")
                                .HasColumnType("text");

                            b1.Property<string>("FailedTransactionMintUrl")
                                .HasColumnType("text");

                            b1.Property<DateTimeOffset>("Expiry")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LightningInvoiceId")
                                .HasColumnType("text");

                            b1.Property<string>("MeltQuoteId")
                                .HasColumnType("text");

                            b1.Property<string>("Status")
                                .HasColumnType("text");

                            b1.HasKey("FailedTransactionInvoiceId", "FailedTransactionMintUrl");

                            b1.ToTable("FailedTransactions", "BTCPayServer.Plugins.Cashu");

                            b1.WithOwner()
                                .HasForeignKey("FailedTransactionInvoiceId", "FailedTransactionMintUrl");
                        });

                    b.Navigation("MeltDetails");

                    b.Navigation("OutputData");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.MintKeys", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.Cashu.Data.Models.Mint", "Mint")
                        .WithMany("Keysets")
                        .HasForeignKey("MintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mint");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.StoredProof", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.Cashu.Data.Models.FailedTransaction", null)
                        .WithMany("UsedProofs")
                        .HasForeignKey("FailedTransactionInvoiceId", "FailedTransactionMintUrl");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.FailedTransaction", b =>
                {
                    b.Navigation("UsedProofs");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.Cashu.Data.Models.Mint", b =>
                {
                    b.Navigation("Keysets");
                });
#pragma warning restore 612, 618
        }
    }
}
